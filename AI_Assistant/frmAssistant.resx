<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMAAAAxQAAADcAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAAEBAZYxMTH/HBwc3gAAAGoAAAANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQUAAAAAlpCQkP/CwsL/QkJC+QQE
        BK0AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcXFwAAAACXkpKS////
        ///q6ur/f39//xcXF+AAAABrAAAADwAAAAQAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAA
        AAUAAAAFAAAABAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAABBAAAAlQkJ
        Cd6mpqb////////////9/f3/vLy8/0BAQPgHBwfFBQUFsQUFBbIFBQWyBQUFsgUFBbIFBQWyBQUFsgUF
        BbIFBQWyBQUFsgUFBbIEBASxAQEBlgAAAEEAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAGBgYAAAAAYSMj
        I+yBgYH/tra2//Pz8///////////////////////6urq/7W1tf+tra3/ra2t/62trf+tra3/ra2t/62t
        rf+tra3/ra2t/62trf+tra3/ra2t/6urq/+BgYH/IyMj7AAAAGEFBQUAAAAAAAAAAAAAAAAAAAAAAAAA
        ACIVFRXatbW1////////////////////////////////////////////////////////////////////
        //////////////////////////////////////////////////+1tbX/FRUV2gAAACEAAAAAAAAAAAAA
        AAAAAAAAAAAAT0ZGRvr29vb/////////////////////////////////////////////////////////
        //////////////////////////////////////////////////////////////b29v9GRkb6AAAATwAA
        AAAAAAAAAAAAAAAAAAAAAABaUlJS/fz8/P//////////////////////////////////////////////
        /////////////////////////////////////////////////////////////////////////Pz8/1JS
        Uv0AAABaAAAAAAAAAAAAAAAAAAAAAwAAAGRSUlL9/Pz8////////////////////////////////////
        ////////+Pj4/8rKyv+ioqL/oqKi/8rKyv/4+Pj/////////////////////////////////////////
        ///8/Pz/UlJS/QAAAGQAAAADAAAAAAAAAEEEBACuAgIA3lJSUv78/Pz/////////////////////////
        //////////////Hx8f9ubm7/PDw8/1paWv5aWlr+PDw8/25ubv/x8fH/////////////////////////
        //////////////z8/P9SUlL+AgIA3gQEAK4AAABCBwYA2GBZAP9gWQD/VFRS/vz8/P//////////////
        ////////////////////////4uLi/4SEhP7e3t7//v7+//7+/v/e3t7/hISE/uLi4v//////////////
        /////////////////////////Pz8/1RUUv5gWQD/YFkA/wYGANgWFAD+pJgA/4B2AP9VVFL+/Pz8////
        /////////////+np6P/Jy8j/4eLg//7+/v///////v7+///////////////////////+/v7///////7+
        /v/h4uD/ycvI/+np6P/////////////////8/Pz/VVRS/oB2AP+klwD/FRQA/hYVAP+jlwD/fnQA/1RU
        Uv78/Pz///////////+/wL//PTdB/y0UPP8zKDr/oqKi////////////////////////////////////
        ///+/v7/oqKh/zMoOv8tFD3/PTdC/7/Av/////////////z8/P9UVFL+fnQA/6OXAP8WFQD/FxUA/6OX
        AP9+dAD/VFRS/vz8/P//////8fLx/0ZCSf9ZDIr/lBvg/28Rqf8xJTn/29zb////////////////////
        /////////////9vb2v8wJDj/bxGp/5Qb4P9ZDIr/RkJJ//Hy8f///////Pz8/1RUUv5+dAD/o5cA/xcV
        AP8TEgD7n5MA/4B2AP9VVFL+/Pz8///////f4N7/MiM7/4oY0f+gHfL/mBzm/zARRP++wL3/////////
        ////////////////////////vsC9/zARRP+YHOf/oB3y/4kY0P8yIzv/3+De///////8/Pz/VVRS/oB2
        AP+fkwD/ExIA+wMCALo/OwD+RT8A/1NTUv78/Pz///////Pz8/9KR03/Ugp//48Z2f9oD5//Myk6/9/f
        3v/////////////////////////////////e397/Myg6/2gPn/+PGdn/UwuA/0tITv/z9PP///////z8
        /P9TU1L+RT8A/z87AP4DAgC6AAAAHwAAAHUAAAC8UlJS/fz8/P///////////8jIyP9GQkn/LRk6/zoy
        P/+sraz///////////////////////////////////////////+sraz/OjI//y0ZOv9GQUn/yMnI////
        /////////Pz8/1JSUv0AAAC8AAAAdQAAAB8AAAAAAAAAAAAAAFtSUlL9/Pz8/////////////////+/v
        7//V1tT/6Ono//7+/v////////////////////////////////////////////7+/v/o6ej/1dbU/+/v
        7//////////////////8/Pz/UlJS/QAAAFsAAAAAAAAAAAAAAAAAAAAAAAAAWlJSUv38/Pz/////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////////////////////z8/P9SUlL9AAAAWgAAAAAAAAAAAAAAAAAAAAAAAABGPDw89vDw
        8P//////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////8PDw/zw8PPYAAABGAAAAAAAAAAAAAAAAAAAAAAAA
        ABQKCgrEjo6O//j4+P//////////////////////////////////////////////////////////////
        //////////////////////////////////////////////j4+P+Ojo7/CgoKxAAAABQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADwODg7MS0tL/WxsbP9tbW3/bW1t/21tbf9tbW3/bW1t/21tbf9tbW3/bW1t/25u
        bv5ubm7+bW1t/21tbf9tbW3/bW1t/21tbf9tbW3/bW1t/21tbf9sbGz/S0tL/Q4ODs0AAAA7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAABbAAAAdwAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAA
        AHgAAAB2AAAAwgAAAMIAAAB2AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHcAAABcAAAAHAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACLAAAAiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIsAAACLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAApwAAAKcAAAATAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIQcGALstKgD7LSoA+wcGALsAAAAhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAB/RkEA/7GkAP+xpAD/RkEA/wAA
        AH8BAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjIAAAAAAJ1rYwD/wbIA/8Gy
        AP9rYwD/AAAAnTAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYiwo
        APmPhQD/j4UA/ywoAPkAAABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAANAQEAjw4NAPIODQDzAQEAjwAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/D////wf///8D////AAAH+AAAAfgAAAHwAAAA8AAAAPAAAADgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAA8AAAAPAAAADwAAAA+AAAAfwAAAP//5////+
        f////D////gf///4H///+B////gf///4H/8=
</value>
  </data>
</root>