<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAKAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAdQAA
        AOYAAAD/AAAAzwAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHYAAAD5AAAA5gAAAHEAAAAJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARwAA
        AOUAAAD/AAAA/wAAAO0AAAD/AAAAzgAAACwAAAAAAAAAAAAAAAsAAACKAAAA/wAAAP0AAAD/AAAA/wAA
        AOMAAABDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIUAAAD+AAAA/wAAALcAAAA2AAAAFQAAANUAAAD/AAAA/wAAANcAAADIAAAA9AAAAP8AAAD5AAAATQAA
        AEEAAADGAAAA/wAAAP0AAAB9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAaAAAA/gAAAPYAAABhAAAAAAAAAAAAAAAAAAAACgAAAIYAAADqAAAA/wAAAP8AAAD7AAAAswAA
        ACsAAAAAAAAAAAAAAAIAAAB3AAAA+wAAAP4AAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAwAAAD4AAAA+AAAAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAhAAAALAAA
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAD4AAAA+wAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL4AAAD/AAAAPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANgAAAP8AAADMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArwAAAP8AAABHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5AAAA/wAAAMYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADhAAAA/wAAACEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAAD9AAAA9AAA
        ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAawAAAP8AAADLAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAABmAAAAwQAAAOsAAADsAAAAvQAAAGcAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        ALQAAAD/AAAAmwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAH8AAAD8AAAA/AAA
        AEAAAAAAAAAAAAAAAAAAAAAaAAAAxQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMoAAAAUAAAAAAAA
        AAAAAAAAAAAAKwAAAPUAAAD/AAAArwAAADcAAAAEAAAAAAAAAAAAAAAAAAAAMAAAAMsAAAD9AAAA/wAA
        APoAAABjAAAAAAAAAAAAAAAAAAAABQAAAMUAAAD/AAAA2AAAAFQAAAATAAAADgAAAFYAAADjAAAA/wAA
        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
        AOsAAAD/AAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7gAA
        AP8AAABzAAAAAQAAAAAAAAAAAAAABAAAAGkAAADFAAAA8QAAAPEAAADFAAAAaQAAAAQAAAAAAAAAAAAA
        AAEAAABxAAAA+AAAAP8AAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB9AAAA/wAAAP8AAADCAAAAQgAAABQAAADKAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAyQAA
        ABQAAABDAAAAwwAAAP8AAAD+AAAAiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABNAAAA5gAAAP8AAAD/AAAA8wAAAP8AAADcAAAAUwAAAA4AAAAOAAAAVAAA
        AN0AAAD/AAAA8wAAAP8AAAD/AAAA5wAAAEkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAeAAAAOYAAAD/AAAA0AAAABYAAAAAAAAAAAAA
        AAAAAAAAAAAAFwAAANAAAAD/AAAA5QAAAHQAAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAACkAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACkAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////H8///A+D//gGAf/wAAD/4cAwf+Hw+H/x//j/8f/4/+H/+H/jw
        Dw/g4AcDgcADgYPDw8GPx+Pxj8fj8Y/H4/GPx+Pxg8PDwYHAA4HA4AcD8PAPD/h//x/8f/4//H/+P/x/
        /h/8MAwf/AAAP/4AAH//A8D//8fj//////8=
</value>
  </data>
</root>